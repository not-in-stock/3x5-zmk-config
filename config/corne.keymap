#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_42keys.h"
#include "../helper/macro.h"

#include "mouse.dtsi"

#define QUICK_TAP_MS 175

// left-hand keys
#define KEYS_L \
     LT5 LT4 LT3 LT2 LT1 LT0 \
     LM5 LM4 LM3 LM2 LM1 LM0 \
     LB5 LB4 LB3 LB2 LB1 LB0
/* ╰───────────╮ LH2 LH1 LH0 │
               ╰─────────────╯ */

// right-hand keys
#define KEYS_R \
     RT0 RT1 RT2 RT3 RT4 RT5 \
     RM0 RM1 RM2 RM3 RM4 RM5 \
     RB0 RB1 RB2 RB3 RB4 RB5
/* │ RH0 RH1 RH2 ╭───────────╯
   ╰─────────────╯ */

// thumb keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2

#define _v_ &trans
#define ___ &none

#define SC SEMICOLON

/* layer names */
#define BAS 0
#define SYM 1
#define NUM 2
#define FN 3
#define NAV 4
#define MOS 5
#define CFG 6

// layer-tap config
&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};


// shift macros for BT contorols
SHIFT_MACRO(s_bt_sel_0, &bt BT_SEL 0, &bt BT_SEL 0 &bt BT_CLR)
SHIFT_MACRO(s_bt_sel_1, &bt BT_SEL 1, &bt BT_SEL 1 &bt BT_CLR)
SHIFT_MACRO(s_bt_sel_2, &bt BT_SEL 2, &bt BT_SEL 2 &bt BT_CLR)
SHIFT_MACRO(s_bt_sel_3, &bt BT_SEL 3, &bt BT_SEL 3 &bt BT_CLR)
SHIFT_MACRO(s_bt_sel_4, &bt BT_SEL 4, &bt BT_SEL 4 &bt BT_CLR)

// shift macros for sym layer
SHIFT_FUNCTION(s_qm_excl, &kp QMARK, &kp EXCL)
SHIFT_FUNCTION(s_min_pls, &kp KP_MINUS, &kp KP_PLUS)
SHIFT_FUNCTION(s_hsh_ast, &kp HASH, &kp KP_ASTERISK)
SHIFT_FUNCTION(s_lbkt_lbrs, &kp LEFT_BRACKET, &kp LEFT_BRACE)
SHIFT_FUNCTION(s_lpar_lt, &kp KP_LEFT_PARENTHESIS, &kp LESS_THAN)
SHIFT_FUNCTION(s_car_pc, &kp CARET, &kp PERCENT)
SHIFT_FUNCTION(s_sqt_dql, &kp SINGLE_QUOTE, &kp DOUBLE_QUOTES)
SHIFT_FUNCTION(s_slh_bslh, &kp KP_SLASH, &kp BACKSLASH)
SHIFT_FUNCTION(s_pip_unscr, &kp PIPE, &kp UNDERSCORE)
SHIFT_FUNCTION(s_rpar_gt, &kp KP_RIGHT_PARENTHESIS, &kp GREATER_THAN)  
SHIFT_FUNCTION(s_rbkt_rbrs, &kp RIGHT_BRACKET, &kp RIGHT_BRACE)
SHIFT_FUNCTION(s_dlr_grv, &kp DOLLAR, &kp GRAVE)
SHIFT_FUNCTION(s_eq_tld, &kp KP_EQUAL, &kp TILDE)
SHIFT_FUNCTION(s_at_amp, &kp AT_SIGN, &kp AMPERSAND)
SHIFT_FUNCTION(s_col_scol, &kp COLON, &kp SEMICOLON)

/* smart mouse */
ZMK_BEHAVIOR(s_mouse, tri_state,
    bindings = <&tog MOS>, <&none>, <&tog MOS>;
    ignored-key-positions = <                  RT0 RT1 RT2 RT3 
                             LM4 LM3 LM2 LM1   RM0 RM1 RM2 RM3 
                                               RH0 RH1 RH2>;
    ignored-layers = <MOS>;
)

/* left-hand HRMs */
ZMK_BEHAVIOR(hml, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <5000>;
    quick-tap-ms = <QUICK_TAP_MS>;
    require-prior-idle-ms = <260>;
    bindings = <&kp>, <&kp>;
    hold-trigger-on-release;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
)

/* right-hand HRMs */
ZMK_BEHAVIOR(hmr, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <5000>;
    quick-tap-ms = <QUICK_TAP_MS>;
    require-prior-idle-ms = <260>;
    bindings = <&kp>, <&kp>;
    hold-trigger-on-release;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
)

ZMK_LAYER(BASE,
//╭.............┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬.............╮
    &kp BSLH      &kp Q         &kp W         &kp E         &kp R         &kp T           &kp Y         &kp U         &kp I         &kp O         &kp P         &kp LBKT
//├.............┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼.............┤
    &s_mouse      &hml LGUI A   &hml LALT S   &hml LCTRL D  &hml LSHFT F  &kp G           &kp H         &hmr RSHFT J  &hmr RCTRL K  &hmr RALT L   &hmr RGUI SC  &kp SQT
//├.............┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼.............┤
    ___           &kp Z         &kp X         &kp C         &kp V         &kp B           &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH      &kp RBKT
//╰.............┼─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────┴.............╯
                                              &lt MOS ESC   &lt NAV TAB   &lt SYM SPACE   &lt NUM RET   &lt FN BSPC   &lt CFG DEL
//                                          ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(SYMBOL,
//╭.............┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬.............╮
    ___           ___           ___           ___           ___           ___             &s_qm_excl    &s_lbkt_lbrs  &s_sqt_dql    &s_rbkt_rbrs  &s_eq_tld     ___
//├.............┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼.............┤
    ___           &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT     ___             &s_min_pls    &s_lpar_lt    &s_slh_bslh   &s_rpar_gt    &s_at_amp     ___
//├.............┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼.............┤
    ___           ___           ___           ___           ___           ___             &s_hsh_ast    &s_car_pc     &s_pip_unscr  &s_dlr_grv    &s_col_scol   ___
//╰.............┼─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────┴.............╯
                                              &kp ESC       &kp TAB       ___             ___           &kp BSPC      &kp DEL
//                                          ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(NUMBER,
//╭.............┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬.............╮
    ___           &kp N1        &kp N2        &kp N3        &kp N4        ___             ___           ___           ___           ___           ___           ___
//├.............┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼.............┤
    ___           &kp N5        &kp N6        &kp N7        &kp N8        ___             ___           &kp RSHFT     &kp RCTRL     &kp RALT      &kp RGUI      ___
//├.............┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼.............┤
    ___           &kp N9        &kp N0        &kp MINUS     &kp EQUAL     ___             ___           ___           ___           ___           ___           ___
//╰.............┼─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────┴.............╯
                                              ___           ___           &kp SPACE       ___           &kp BSPC      &kp DEL
//                                          ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
)


ZMK_LAYER(FUNCTION,
//╭.............┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬.............╮
    ___           &kp F1        &kp F2        &kp F3        &kp F4        ___             ___           ___           ___           ___           ___           ___
//├.............┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼.............┤
    ___           &kp F5        &kp F6        &kp F7        &kp F8        ___             ___           &kp RSHFT     &kp RCTRL     &kp RALT      &kp RGUI      ___
//├.............┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼.............┤
    ___           &kp F9        &kp F10       &kp F11       &kp F12       ___             ___           ___           ___           ___           ___           ___
//╰.............┼─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────┴.............╯
                                              &kp ESC       ___           ___             ___           ___           ___
//                                          ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(NAVIGATION,
 //╭............─┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬.............╮
     ___           ___           ___           ___           ___           ___             ___           &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       ___
 //├.............┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼.............┤
     ___           &kp LGUI     &kp LALT      &kp LCTRL      &kp LSHFT     ___             ___           &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     ___
 //├.............┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼.............┤
     ___           ___           ___           ___           ___           ___             ___           ___           ___           ___           ___           ___
 //╰.............┼─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────┴.............╯
                                               ___           ___           ___             ___           &kp BSPC      &kp DEL
 //                                          ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(MOUSE,
 //╭.............┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬.............╮
     ___           ___           ___           ___           ___           ___             ___          &kp K_SCROLL_DOWN &kp K_SCROLL_UP   ___          ___           ___
 //├.............┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼.............┤
     ___           &kp LGUI     &kp LALT      &kp LCTRL      &kp LSHFT     ___             ___           &mmv MV_L     &mmv MV_D     &mmv MV_U     &mmv MV_R     ___
 //├.............┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼.............┤
     ___           ___           ___           ___           ___           ___             ___           ___           ___           ___           ___           ___
 //╰.............┼─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────┴.............╯
                                               ___           ___           ___             &mkp LCLK     &mkp RCLK     &mkp MCLK
 //                                          ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(CONFIG,
 //╭.............┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬.............╮
     ___           &s_bt_sel_0   &s_bt_sel_1   &s_bt_sel_2   &s_bt_sel_3   &s_bt_sel_4     ___           ___           ___           ___           ___           ___
 //├.............┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼.............┤
     ___           &kp C_BRI_DN  &kp C_BRI_UP  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE      ___           &kp RSHFT     &kp RCTRL     &kp RALT      &kp RGUI      ___
 //├.............┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼.............┤
     ___           ___           ___           ___           &sys_reset    &bootloader     &sys_reset    &bootloader   ___           ___           ___           ___
 //╰.............┼─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────┴.............╯
                                               ___           ___           ___             ___           ___           ___
 //                                          ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
)
 
